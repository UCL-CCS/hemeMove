cmake_minimum_required (VERSION 2.8)
include(ExternalProject)
project(HemeLB)

# -------CPPUNIT -------------

# --------- tinyxml -------------------
add_definitions(-DTIXML_USE_STL)
ExternalProject_Add(
   tinyxml_project
	URL http://sourceforge.net/projects/tinyxml/files/tinyxml/2.6.2/tinyxml_2_6_2.zip
   CONFIGURE_COMMAND ""
	BUILD_IN_SOURCE 1
	BUILD_COMMAND ""
	INSTALL_COMMAND ""
)
ExternalProject_Get_Property(tinyxml_project source_dir)
include_directories(${source_dir})
set(tiny_xml_sources 
	${source_dir}/tinyxml.cpp 
	${source_dir}/tinyxmlparser.cpp 
	${source_dir}/tinystr.cpp
	${source_dir}/tinyxmlerror.cpp)
# tell cmake that it is the tinyxml project that generates the tinyxml sources
add_custom_command(
   OUTPUT ${tiny_xml_sources} ${source_dir}
   COMMAND ""
   DEPENDS tinyxml_project
)
add_library(tiny_xml ${tiny_xml_sources})
list(APPEND externals tinyxml_project)

# ------- parmetis --------------------
ExternalProject_Add(
   parmetis_project
	URL http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/parmetis-4.0.2.tar.gz
   CONFIGURE_COMMAND make config
	BUILD_IN_SOURCE 1
	BUILD_COMMAND make MAKEFLAGS= #Workaround for bug in parmetis makefile treating switches as targets
	INSTALL_COMMAND ""
)
ExternalProject_Get_Property(parmetis_project binary_dir)
ExternalProject_Get_Property(parmetis_project source_dir) 
add_library(parmetis STATIC IMPORTED)
add_library(metis STATIC IMPORTED)
# tell cmake that the include dirs are generated by the download
set(parmetis_include_dirs 
	${source_dir}/include 
	${source_dir}/metis/include)
#add_custom_command(
#   OUTPUT ${source_dir}/include/parmetis.h
#   COMMAND ""
#   DEPENDS parmetis_project
#)
add_dependencies(parmetis parmetis_project)
add_dependencies(metis parmetis_project)
include_directories(${parmetis_include_dirs})
set_property(
	TARGET parmetis 
	PROPERTY IMPORTED_LOCATION ${binary_dir}/build/Darwin-i386/libparmetis/libparmetis.a)
set_property(
	TARGET metis 
	PROPERTY IMPORTED_LOCATION ${binary_dir}/build/Darwin-i386/libmetis/libmetis.a)
list(APPEND externals parmetis_project)
	
# ----------- HemeLB ------------------


add_definitions(-DHEMELB_CFG_ON_BSD -DHEMELB_CFG_ON_OSX)
set(root_sources SimulationMaster.cc mpiInclude.cc D3Q15.cc)
add_executable(hemelb main.cc ${root_sources})
add_executable(heme_unittests ${root_sources})
include_directories(${PROJECT_SOURCE_DIR})
set(package_subdirs
	configuration
	reporting
	steering
	vis
	lb
	net
	debug
	topology
	util
	geometry
	io
	log)
foreach(subdir ${package_subdirs})
	set(lib "hemelb_${subdir}")
	list(APPEND heme_libraries ${lib})
	add_subdirectory(${subdir})
	add_dependencies(${lib} ${externals})
endforeach(${subdir})
add_subdirectory(unittests)
target_link_libraries(hemelb ${heme_libraries} tiny_xml parmetis metis)
target_link_libraries(heme_unittests hemelb_unittests ${heme_libraries} tiny_xml parmetis metis)

# ------MPI------------------
# Require MPI for this project:
find_package(MPI REQUIRED)
set(CMAKE_CXX_COMPILE_FLAGS "${CMAKE_CXX_COMPILE_FLAGS} ${MPI_COMPILE_FLAGS}")
set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} ${CMAKE_CXX_LINK_FLAGS}")
include_directories(MPI_INCLUDE_PATH)
target_link_libraries(hemelb ${MPI_LIBRARIES})
target_link_libraries(heme_unittests ${MPI_LIBRARIES})
target_link_libraries(heme_unittests cppunit)