# This file is part of HemeLB and is Copyright (C)
# the HemeLB team and/or their institutions, as detailed in the
# file AUTHORS. This software is provided under the terms of the
# license in the file LICENSE.
include_guard()

macro(hemelb_dependency NAME STEP)
  include(${HEMELB_DEPENDENCIES_PATH}/${NAME}/${STEP}.cmake)
endmacro()

function(add_hemelb_dependency name)
  string(TOUPPER "DEPS_${name}" mode_var)
  if(NOT DEFINED ${mode_var})
    message(FATAL_ERROR "No instructions on how to build ${name}")
  endif()
  set(mode ${${mode_var}})

  if(${mode} STREQUAL System)
    set(build OFF)
    set(ENV{DEPS_FIND_MODE_${name}} "QUIET REQUIRED")
    hemelb_dependency(${name} find)

  elseif(${mode} STREQUAL Auto)
    set(ENV{DEPS_FIND_MODE_${name}} QUIET)
    hemelb_dependency(${name} find)
    if(${name}_FOUND)
      set(build OFF)
    else()
      set(build ON)
    endif()
  elseif(${mode} STREQUAL Build)
    set(build ON)
  else()
    message(FATAL_ERROR "Unknown option '${mode}' for building dependency '${name}'")
  endif()

  if(build)
    hemelb_dependency(${name} build)
    set(HEMELB_PROJECT_DEPENDENCIES "${HEMELB_PROJECT_DEPENDENCIES};dep_${name}" PARENT_SCOPE)
  endif()
endfunction()

function(find_hemelb_dependency name)
  cmake_parse_arguments(FHD "QUIET;REQUIRED" "" "" ${ARGN})
  set(mode "")
  if(FHD_QUIET)
    list(APPEND mode QUIET)
  endif()
  if(FHD_REQUIRED)
    list(APPEND mode REQUIRED)
  endif()
  string(REPLACE ";" " " mode "${mode}")
  set(ENV{DEPS_FIND_MODE_${name}} ${mode})
  hemelb_dependency(${name} find)
endfunction()
