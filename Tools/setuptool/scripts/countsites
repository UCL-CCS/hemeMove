#!/usr/bin/env python

import xdrlib
import numpy as np

def CountFluidSites(filename):
    cfg = file(filename)
    preamble = cfg.read(5*4 + 4*8)
    un = xdrlib.Unpacker(preamble)
    
    StressType = un.unpack_uint()
    BlockCounts = [un.unpack_uint() for i in xrange(3)]
    BlockSize = un.unpack_uint()

    TotalBlocks = np.prod(BlockCounts)
    
    header = cfg.read(2 * TotalBlocks * 4)
    un = xdrlib.Unpacker(header)

    FluidSitesPerBlock = np.zeros(TotalBlocks, dtype=np.uint)
    BytesPerBlock = np.zeros(TotalBlocks, dtype=np.uint)

    for i in xrange(TotalBlocks):
        FluidSitesPerBlock[i] = un.unpack_uint()
        BytesPerBlock[i] = un.unpack_uint()

    return FluidSitesPerBlock.sum()

if __name__ == "__main__":
    import sys

    for fn in sys.argv[1:]:
        print CountFluidSites(fn)
        
